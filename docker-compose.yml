# WARNING: Environmental values should always be kept a secret.
# Environmental values below should NOT go into production. Use a .env file or secret store.
# Environmental values loaded below by these containers are for instructional purpose only.

# TIP: If you add/change environment values below you will need to restart the container...
# run: docker compose up -d

# BUILD VERSION: 3.5

services:
  php:
    build:
      context: .
      dockerfile: Dockerfile
    image: lightsail-mvc
    container_name: lightsail-php-container
    ports:
      - 80:80
    volumes:
      - .:/srv/app
    links:
      - mysql
      - redis
      - rabbitmq
    environment:

      # MySQL settings
      DB_HOST: mysql
      DB_DATABASE: lightsail
      DB_USERNAME: username
      DB_PASSWORD: password
      # NOTE: Ensure the username and password above match those under the "mysql" section below.
      # NOTE: If you change the username and password, restart the container by running this command:
      # NOTE: docker compose down && docker compose up -d

      # Redis Settigns
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SESSION_DRIVER: redis
      CACHE_DRIVER: redis

      # AWS S3 settings
      AWS_BUCKET_NAME: your_aws_s3_bucket_name
      AWS_REGION: your_aws_s3_bucket_region
      AWS_VERSION: latest
      AWS_ACCESS_KEY: your_aws_access_key
      AWS_SECRET_KEY: your_aws_secret_key

      # RabbitMQ settings
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

      # API Tokens (for the template in Docs)
      API_TOKEN_TEMPLATE: 2aa788b32cd40c8ee0948d10f065

  mysql:
    image: mysql:8.0
    container_name: lightsail-mysql-container
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: lightsail
      MYSQL_USER: username
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
      MYSQL_ROOT_HOST: '%'
      MYSQL_TCP_POST: 3306
    command: --default-authentication-plugin=mysql_native_password --bind-address=0.0.0.0 # Allow remote access
    volumes:
        - ./data/db:/var/lib/mysql # Persistent data storage
      # NOTE: You can add remote user access into MySQL Container by running these Docker commands after the Contain is running. Replace "remote_user" with a preferred user name.
      # NOTE: docker exec -it nextpage-mysql-container mysql -u root -p -e "CREATE USER IF NOT EXISTS 'remote_user'@'localhost' IDENTIFIED BY 'user_password';"
      # NOTE: docker exec -it nextpage-mysql-container mysql -u root -p -e "GRANT ALL PRIVILEGES ON nextpage.* TO 'remote_user'@'localhost'; FLUSH PRIVILEGES;"
      # NOTE: Enter the MYSQL_ROOT_PASSWORD when prompted.

  redis:
    image: redis:4.0-alpine
    container_name: lightsail-redis-container
    ports:
      - 6379:6379

  rabbitmq:
    image: rabbitmq:4-management
    container_name: lightsail-rabbitmq-container
    ports:
      - 5672:5672 # AMQP protocol port (for TCP connections)
      - 15672:15672 # RabbitMQ Management UI (HTTP port)
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    # You can access the RabbitMQ Management web portal here:  http://localhost:15672
    # and use the credentials (guest/guest) as set above.
